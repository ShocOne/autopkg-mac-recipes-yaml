Description: |
  Downloads the latest version of MOE and creates a package.

  Required override keys:
  - ACTIVATION_KEY
Identifier: com.github.eth-its-recipes.pkg.CSDS
MinimumVersion: "2.3"
ParentRecipe: com.github.eth-its-recipes.download.CSDS

Input:
  NAME: CSDS

Process:
  - Arguments:
      pkgdirs:
        parts_dir: "0775"
      pkgroot: "%RECIPE_CACHE_DIR%/Scripts"
    Processor: PkgRootCreator

  - Arguments:
      pkgdirs: {}
      pkgroot: "%RECIPE_CACHE_DIR%/pkgroot"
    Processor: PkgRootCreator

  - Arguments:
      parts_dir: "%RECIPE_CACHE_DIR%/Scripts/parts_dir"
      large_file_path: "%RECIPE_CACHE_DIR%/downloads/%latest_file%.dmg"
    Processor: com.github.eth-its-recipes.processors/LargeFileSpltter

  - Arguments:
      file_content: |
        #!/bin/bash
        ## script to install CSDS

        DIR=$(dirname "$0")

        # make a temporary directory to reassemble the DMG in
        echo "Creating temporary working directory"
        tempDirectory=$( /usr/bin/mktemp -d "/private/tmp/CSDS.XXXXXX" )
        cd "$tempDirectory"
        echo "Recombining file parts"
        /bin/cat "$DIR"/parts_dir/chunk_* > "$tempDirectory/%latest_file%.dmg"

        if [[ -f "$tempDirectory/%latest_file%.dmg" ]]; then
            APPPATH="/Volumes/csds-osx"
            echo "DMG successfully recombined - mounting to $APPPATH"
            # attach dmg image
            mkdir -p "$APPPATH"
            echo "Mounting to $APPPATH"
            hdiutil attach "$tempDirectory/%latest_file%.dmg" -nobrowse -mountpoint "$APPPATH"

            # now run the silent installer
            "$APPPATH/csds-osx.app/Contents/MacOS/osx-x86_64" --prefix /Applications/CSDS --mode unattended --unattendedmodeui none --Licensing ActivateAfterInstall --activation_key "%ACTIVATION_KEY%"

            # detach dmg image
            hdiutil eject "$APPPATH"

        # delete dmg
        rm -Rf "$tempDirectory"
      file_mode: "0755"
      file_path: "%RECIPE_CACHE_DIR%/Scripts/postinstall"
    Processor: FileCreator

  - Arguments:
      force_pkg_build: true
      pkg_request:
        chown: []
        id: ch.ethz.id.pkg.CSDS
        pkgname: "%NAME%-%version%"
        pkgroot: "%RECIPE_CACHE_DIR%/pkgroot"
        pkgtype: flat
        scripts: Scripts
        version: "%version%"
    Processor: PkgCreator

  - Arguments:
      path_list:
        - "%RECIPE_CACHE_DIR%/pkgroot"
        - "%RECIPE_CACHE_DIR%/Scripts"
    Processor: PathDeleter
