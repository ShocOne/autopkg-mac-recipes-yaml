Description: |
  Creates a package from a pre-downloaded JMP installer which has already been installed on a client, and the SIP file converted to a JMP.per file as per the instructions in the JMP Deployment Guide.
Identifier: com.github.eth-its-recipes.pkg.JMP
ParentRecipe: com.github.eth-its-recipes.download.internal-sources
MinimumVersion: "2.3"

Input:
  NAME: JMP
  LIST_LANGUAGE: ML
  LIST_NAME: JMP
  MAJOR_VERSION: "14"

Process:
  - Processor: PkgRootCreator
    Arguments:
      pkgdirs: {}
      pkgroot: "%RECIPE_CACHE_DIR%/Scripts"

  - Processor: PkgRootCreator
    Arguments:
      pkgdirs: {}
      pkgroot: "%RECIPE_CACHE_DIR%/pkgroot"

  - Processor: AppDmgVersioner
    Arguments:
      dmg_path: "%pathname%"

  - Processor: Copier
    Arguments:
      source_path: "%pathname%"
      destination_path: "%RECIPE_CACHE_DIR%/Scripts/JMP_%MAJOR_VERSION%.dmg"
      overwrite: True

  - Arguments:
      file_content: |
        #!/bin/bash
        DIR=$(dirname "$0")
        MAJOR="%MAJOR_VERSION%"
        MINOR=$(echo "%version%" | cut -d"." -f2)

        # attach main image
        echo "Mounting JMP image"
        hdiutil attach ${DIR}/JMP_${MAJOR}.dmg -nobrowse

        # attach installer image, located inside main image
        echo "Mounting JMP installer image"
        hdiutil attach /Volumes/JMP_${MAJOR}_${MINOR}/JMP/JMP/${MAJOR}_${MINOR}/Macintosh/JMP-Install.dmg -nobrowse

        # install JMP with ETH License
        installer -target / -pkg "/Volumes/JMP-${MAJOR}-Installer/JMP ${MAJOR}.pkg"

        # eject mounted JMP volumes
        for path in /Volumes/JMP*; do
            [ -d "${path}" ] || continue # if not a directory, skip
            dirname="$(basename "${path}")"
            hdiutil eject ${path}
        done

        # relocate license
        if [[ -f "$HOME/Library/Application Support/JMP/${MAJOR}/JMP.per" ]]; then
            /bin/mv "$HOME/Library/Application Support/JMP/${MAJOR}/JMP.per" \
            "/Library/Application Support/JMP/${MAJOR}/JMP.per"
        elif [[ -f "/var/root/Library/Application Support/JMP/${MAJOR}/JMP.per" ]]; then
            /bin/mkdir -p "/Library/Application Support/JMP/${MAJOR}"
            /bin/mv "/var/root/Library/Application Support/JMP/${MAJOR}/JMP.per" \
            "/Library/Application Support/JMP/${MAJOR}/JMP.per"
            # change permissions
            /bin/chmod 644 "/Library/Application Support/JMP/${MAJOR}/JMP.per"
        else
            echo "ERROR: JMP.per not found"
            exit 1
        fi
        if [[ -f "/Library/Application Support/JMP/${MAJOR}/JMP.per" ]]; then
            # define license location
            /usr/bin/defaults write "/Library/Preferences/com.sas.jmp.plist" Setinit_${MAJOR}_Path "/Library/Application Support/JMP/${MAJOR}/JMP.per"
        else
            echo "ERROR: JMP.per not found in Library folder"
            exit 1
        fi
      file_mode: "0755"
      file_path: "%RECIPE_CACHE_DIR%/Scripts/postinstall"
    Processor: FileCreator

  - Arguments:
      force_pkg_build: True
      pkg_request:
        chown: []
        id: ch.ethz.id.pkg.JMP
        pkgname: "%NAME%-%MAJOR_VERSION%-%version%"
        pkgroot: "%RECIPE_CACHE_DIR%/pkgroot"
        pkgtype: flat
        scripts: Scripts
        version: "%version%"
    Processor: PkgCreator
